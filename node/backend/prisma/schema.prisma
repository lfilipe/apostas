// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  password    String
  role        String   @default("USER")
  totalPoints Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  bets        Bet[]
}

model Competition {
  id        String   @id @default(uuid())
  name      String
  idSeason  String
  matches   Match[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Match {
  id            String      @id @default(uuid())
  idMatch       String      @unique
  competition   Competition @relation(fields: [competitionId], references: [id])
  competitionId String
  homeTeamId    String
  awayTeamId    String
  homeTeamName  String
  awayTeamName  String
  homeTeamScore Int?
  awayTeamScore Int?
  matchDateTime DateTime
  status        String
  bets          Bet[]
  odds          BettingOdds[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Bet {
  id              String   @id @default(uuid())
  user            User     @relation(fields: [userId], references: [id])
  userId          String
  match           Match    @relation(fields: [matchId], references: [id])
  matchId         String
  homeTeamScore   Int
  awayTeamScore   Int
  isBet           Boolean  @default(false)
  isMatchedResult Boolean  @default(false)
  points          Int      @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([userId])
  @@index([matchId])
}

model BettingOdds {
  id            String   @id @default(uuid())
  matchId       String
  match         Match    @relation(fields: [matchId], references: [id])
  seasonId      String
  matchDateTime DateTime
  homeWinOdd    Float    @default(2.00)
  awayWinOdd    Float    @default(1.50)
  drawOdd       Float    @default(2.00)
  createdBy     String
  createdAt     DateTime @default(now())
  updatedBy     String?
  updatedAt     DateTime @updatedAt

  @@map("betting_odds")
}
